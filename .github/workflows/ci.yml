name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.20', '1.21']
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Build
      run: go build -v ./...
    
    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
    
    - name: Vet
      run: go vet ./...
    
    - name: Format check (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        go fmt ./...
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code is not formatted. Please run 'go fmt ./...'"
          exit 1
        fi
    
    - name: Format check (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        go fmt ./...
        $changes = git status --porcelain
        if ($changes) {
          Write-Host "Code is not formatted. Please run 'go fmt ./...'"
          exit 1
        }
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build-cross-platform:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build for multiple platforms
      run: |
        # Test cross-compilation without creating release artifacts
        GOOS=darwin GOARCH=amd64 go build -o /dev/null .
        GOOS=darwin GOARCH=arm64 go build -o /dev/null .
        GOOS=linux GOARCH=amd64 go build -o /dev/null .
        GOOS=linux GOARCH=arm64 go build -o /dev/null .
        GOOS=windows GOARCH=amd64 go build -o /dev/null .
        GOOS=windows GOARCH=arm64 go build -o /dev/null .